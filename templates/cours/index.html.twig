{% extends 'base.html.twig' %}
{% block stylesheets %}
    <link rel="stylesheet" type="text/css" href="{{ asset('css/Cours/affichage_emploi_du_temps.css') }}">
{% endblock %}
{% block title 'Emploi du temps' %}
{% block body %}
    <div class="container-fluid d-flex flex-column">
        <div id="optionsDiv">
                {% if role == 'ROLE_PERSONNEL' or role == 'ROLE_ADMIN' %}
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <button class="btn btn-primary" id="choixEdt" type="button"></button>
                        </div>
                        <label hidden for="selectEdt">Choix de l'emploi du temps</label>
                        <select class="custom-select" id="selectEdt">
                            {% for prof in liste_prof %}
                                <option value="pr_{{ prof.id }}"
                                        class="select_prof">{{ prof.civilite }} {{ prof.nom }} {{ prof.prenom }}</option>
                            {% endfor %}
                            {% for classe in liste_classe %}
                                <option value="cl_{{ classe.id }}" class="select_classe">{{ classe.nomClasse }}</option>
                            {% endfor %}
                            {% for sousgroupe in liste_sousgroupe %}
                                <option value="sg_{{ sousgroupe.id }}"
                                        class="select_sousgroupe">{{ sousgroupe.nomSousgroupe }}</option>
                            {% endfor %}
                        </select>
                    </div>
                {% elseif role == 'ROLE_PROF' %}
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <label class="input-group-text" for="selectEdt">Choix de l'emploi du temps</label>
                        </div>
                        <select class="custom-select" id="selectEdt">
                            <option value="pr_{{ liste_prof.id }}">Emploi du temps personnel</option>
                            <optgroup label="Classes">
                                {% for classe in liste_classe %}
                                    <option value="cl_{{ classe.id }}">{{ classe.nomClasse }}</option>
                                {% endfor %}
                            </optgroup>
                            <optgroup label="Sous-groupes">
                                {% for sousgroupe in liste_sousgroupe %}
                                    <option value="sg_{{ sousgroupe.id }}">{{ sousgroupe.nomSousgroupe }}</option>
                                {% endfor %}
                            </optgroup>
                        </select>
                    </div>
                {% endif %}
        </div>
        <div class="jumbotron jumbotron-fluid">
            <div class="row">
                <div class="semaine_btn col-2">
                    <button class="btn btn-info" type="button" id="dateMoins"><</button>
                    <button class="btn btn-info" type="button" id="datePlus">></button>
                </div>

                <h1 class="titre_edt col-8"></h1>
                {% if role == "ROLE_PROF" %}
                    <div class="col-2">
                        <form action="{{ path('cours.add') }}" method="post">
                            <button class="btn-primary btn add_cours" type="submit" name="ajouter"></button>
                        </form>
                    </div>

                {% endif %}
            </div>
            <div id="calendrier">
            </div>
        </div>
    </div>
    <div class="modal fade" id="coursCRUD" tabindex="-1" role="dialog" aria-labelledby="coursCRUD"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitre"></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" id="modal-body">
                </div>
                <div class="modal-footer d-flex justify-content-around" id="modal-footer">
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block javascripts %}
    <script>
        let contentCours = {};
        let indexCours = {
            index: {
                calendrier: $('#calendrier'),
                plus: $('#datePlus'),
                moins: $('#dateMoins'),
                option: {
                    Prof: $(".select_prof"),
                    Clas: $(".select_classe"),
                    Sous: $(".select_sousgroupe"),
                },
                btnChoixEdt: $("#choixEdt"),
                selectEdt: $("#selectEdt"),
                titreEdt: $(".titre_edt"),
                options: $("#options"),
                optionsDiv: $("#optionsDiv"),
                modal:  $("#coursCRUD"),
                modalTitre: $("#modalTitre"),
                modalBody: $("#modal-body"),
                modalFooter: $("#modal-footer"),
            },
            param: {
                date: null,
                choixCat: ["Classes", "Sous-groupes", "Professeurs"]
            },
            method: {
                initialize: function () {
                    indexCours.param.date = this.startOfWeek(new Date);
                    indexCours.param.date.setHours(8, 0, 0, 0);
                    indexCours.index.selectEdt.on('change', this.AJAX);
                    {% if role == 'ROLE_PERSONNEL' or role == 'ROLE_ADMIN' %}
                        indexCours.index.selectEdt.children().hide();
                        indexCours.index.btnChoixEdt.text(indexCours.param.choixCat[0]);
                        this.changeSelectOption(indexCours.index.btnChoixEdt[0], indexCours.param.choixCat);
                        indexCours.index.btnChoixEdt.click(function () {
                            indexCours.method.changeBtnText(this, indexCours.param.choixCat)
                            indexCours.method.changeSelectOption(this, indexCours.param.choixCat)
                            indexCours.method.AJAX();
                        });
                    {% endif %}
                    indexCours.index.titreEdt.text(this.getTitre(indexCours.param.date{% if role != 'ROLE_ELEVE' %}, indexCours.index.selectEdt.find("option:selected").text(){% endif %}));
                    indexCours.index.options.click(function () {
                        indexCours.index.optionsDiv.toggle();
                    });
                    indexCours.index.plus.click(function () {
                        indexCours.method.changeWeek(1, indexCours.param.date);
                        indexCours.method.AJAX();
                    });
                    indexCours.index.moins.click(function () {
                        indexCours.method.changeWeek(-1, indexCours.param.date);
                        indexCours.method.AJAX();
                    });
                    indexCours.index.modal.on('show.bs.modal', function (event) {
                        let cours = $(event.relatedTarget) // Cours that triggered the modal
                        indexCours.method.detailsAJAX(cours);
                    });
                    this.AJAX();
                },
                changeWeek: function (offset, date) {
                    date.setDate(date.getDate() + offset * 7);
                },
                startOfWeek: function (date) {
                    let diff = date.getDate() - date.getDay() + (date.getDay() === 0 ? -6 : 1);
                    return new Date(date.setDate(diff));
                },
                changeBtnText: function (btn, arr) {
                    let val = btn.innerText;
                    let index = arr.indexOf(val);
                    if (index === arr.length - 1) {
                        btn.innerText = arr[0];
                    } else {
                        btn.innerText = arr[index + 1];
                    }
                },
                changeSelectOption: function (btn, arr) {
                    let str = btn.innerText;
                    $("option[selected]").removeAttr("selected");
                    for (let i = 0; i < arr.length; i++) {
                        let list = indexCours.index.option[arr[i].substr(0, 4)];
                        console.log(str, arr[i])
                        if (str === arr[i]) {
                            list.show();
                            list.first().attr("selected", true);
                        } else {
                            list.hide();
                        }
                    }
                },
                AJAX: function () {
                    $.ajax({
                        url: "{{ path('cours.ajax') }}",
                        method: "GET",
                        data: {date: Date.parse(indexCours.param.date) / 1000, select: indexCours.index.selectEdt.val()}
                    }).done(function (msg) {
                        indexCours.index.calendrier.html(msg);
                        indexCours.index.titreEdt.html(indexCours.method.getTitre(indexCours.param.date{% if role != 'ROLE_ELEVE' %}, indexCours.index.selectEdt.find("option:selected").text(){% endif %}));
                    })
                },
                detailsAJAX: function (cours){
                    $.ajax({
                        url: "{{ path('cours.details') }}",
                        method: "POST",
                        data: {id: cours.data('id'), date: Date.parse(indexCours.param.date) / 1000}
                    }).done(function (msg) {
                        console.log(msg)
                        indexCours.index.modalTitre.html(msg.titre);
                        indexCours.index.modalBody.html(msg.body.content);
                        indexCours.index.modalBody.html(msg.body.content);
                        indexCours.index.modalFooter.html(msg.footer.content);
                    })
                },
                getTitre: function (date, str = null) {
                    let dateM = new Date(date);
                    let dateS = new Date();
                    dateS.setDate(dateM.getDate() + 5);
                    let dateMonday = dateM.getDate() + "/" + (dateM.getMonth() + 1);
                    let dateSaturday = dateS.getDate() + "/" + (dateS.getMonth() + 1);
                    if (str && window.innerWidth > 760) {
                        return "Emploi du temps du " + dateMonday + " au " + dateSaturday + " (" + str + ")";
                    } else {
                        return "Emploi du temps du " + dateMonday + " au " + dateSaturday;
                    }
                }
            }
        }
        indexCours.method.initialize();
    </script>
{% endblock %}
